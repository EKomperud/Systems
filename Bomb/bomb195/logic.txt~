1. push rbx onto the stack (Callee save)
2. allocate 28 to the stack pointer
3. move the base SP into %rsi
4. Call "read_six_numbers"
   Regs:
	%rdi = 6309904
	%rsi = 140737488346784
	%rdx = 2
	%rcx = 2/3
	%r8  = 140737354092547/8
	%r9  = 0


5. Don't explode if the value @ mem address @ %rsp is 0

rbx = 4th input
compare 4th and 5th input
if equal, continue

[0,1,1,2,3,5]

rdi = input
allocate 24 bytes
Needs more than one integer input

Phase 4:
allocate 24 bytes
Must have 2 inputs
continue if first input is less than or equal to 14
edx = 14
esi = 0
edi = first input (14)
result of func4 must equal 31
second input must equal 31

Phase 5:
Input must be 6 chars long
eax = 0
edx = 0

rax must equal 6
rdx must equal 45

Phase 6:
